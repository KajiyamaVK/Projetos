{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import PropTypes from'prop-types';import View from\"react-native-web/dist/exports/View\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import Collapsible from\"./Collapsible\";import{ViewPropTypes}from\"./config\";var COLLAPSIBLE_PROPS=Object.keys(Collapsible.propTypes);var VIEW_PROPS=Object.keys(ViewPropTypes);var Accordion=function(_Component){_inherits(Accordion,_Component);var _super=_createSuper(Accordion);function Accordion(){_classCallCheck(this,Accordion);return _super.apply(this,arguments);}_createClass(Accordion,[{key:\"_toggleSection\",value:function _toggleSection(section){if(!this.props.disabled){var _this$props=this.props,activeSections=_this$props.activeSections,expandMultiple=_this$props.expandMultiple,onChange=_this$props.onChange;var updatedSections=[];if(activeSections.includes(section)){updatedSections=activeSections.filter(function(a){return a!==section;});}else if(expandMultiple){updatedSections=[].concat(_toConsumableArray(activeSections),[section]);}else{updatedSections=[section];}onChange&&onChange(updatedSections);}}},{key:\"render\",value:function render(){var _this=this;var viewProps={};var collapsibleProps={};Object.keys(this.props).forEach(function(key){if(COLLAPSIBLE_PROPS.includes(key)){collapsibleProps[key]=_this.props[key];}else if(VIEW_PROPS.includes(key)){viewProps[key]=_this.props[key];}});var _this$props2=this.props,activeSections=_this$props2.activeSections,containerStyle=_this$props2.containerStyle,sectionContainerStyle=_this$props2.sectionContainerStyle,expandFromBottom=_this$props2.expandFromBottom,sections=_this$props2.sections,underlayColor=_this$props2.underlayColor,touchableProps=_this$props2.touchableProps,Touchable=_this$props2.touchableComponent,_onAnimationEnd=_this$props2.onAnimationEnd,renderContent=_this$props2.renderContent,renderHeader=_this$props2.renderHeader,renderFooter=_this$props2.renderFooter,renderSectionTitle=_this$props2.renderSectionTitle;var renderCollapsible=function renderCollapsible(section,key){return React.createElement(Collapsible,_extends({collapsed:!activeSections.includes(key)},collapsibleProps,{onAnimationEnd:function onAnimationEnd(){return _onAnimationEnd(section,key);}}),renderContent(section,key,activeSections.includes(key),sections));};return React.createElement(View,_extends({style:containerStyle},viewProps),sections.map(function(section,key){return React.createElement(View,{key:key,style:sectionContainerStyle},renderSectionTitle(section,key,activeSections.includes(key)),expandFromBottom&&renderCollapsible(section,key),React.createElement(Touchable,_extends({onPress:function onPress(){return _this._toggleSection(key);},underlayColor:underlayColor},touchableProps),renderHeader(section,key,activeSections.includes(key),sections)),!expandFromBottom&&renderCollapsible(section,key),renderFooter&&renderFooter(section,key,activeSections.includes(key),sections));}));}}]);return Accordion;}(Component);Accordion.propTypes={sections:PropTypes.array.isRequired,renderHeader:PropTypes.func.isRequired,renderContent:PropTypes.func.isRequired,renderFooter:PropTypes.func,renderSectionTitle:PropTypes.func,activeSections:PropTypes.arrayOf(PropTypes.number).isRequired,onChange:PropTypes.func.isRequired,align:PropTypes.oneOf(['top','center','bottom']),duration:PropTypes.number,easing:PropTypes.string,underlayColor:PropTypes.string,touchableComponent:PropTypes.elementType,touchableProps:PropTypes.object,disabled:PropTypes.bool,expandFromBottom:PropTypes.bool,expandMultiple:PropTypes.bool,onAnimationEnd:PropTypes.func,sectionContainerStyle:ViewPropTypes.style,containerStyle:ViewPropTypes.style};Accordion.defaultProps={underlayColor:'black',disabled:false,expandFromBottom:false,expandMultiple:false,touchableComponent:TouchableHighlight,renderSectionTitle:function renderSectionTitle(){return null;},onAnimationEnd:function onAnimationEnd(){return null;},sectionContainerStyle:{}};export{Accordion as default};","map":{"version":3,"sources":["C:/Rep/Projetos/Fidelity/node_modules/react-native-collapsible/Accordion.js"],"names":["React","Component","PropTypes","Collapsible","ViewPropTypes","COLLAPSIBLE_PROPS","Object","keys","propTypes","VIEW_PROPS","Accordion","section","props","disabled","activeSections","expandMultiple","onChange","updatedSections","includes","filter","a","viewProps","collapsibleProps","forEach","key","containerStyle","sectionContainerStyle","expandFromBottom","sections","underlayColor","touchableProps","Touchable","touchableComponent","onAnimationEnd","renderContent","renderHeader","renderFooter","renderSectionTitle","renderCollapsible","map","_toggleSection","array","isRequired","func","arrayOf","number","align","oneOf","duration","easing","string","elementType","object","bool","style","defaultProps","TouchableHighlight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, TouchableHighlight } from 'react-native';\nimport Collapsible from './Collapsible';\nimport { ViewPropTypes } from './config';\n\nconst COLLAPSIBLE_PROPS = Object.keys(Collapsible.propTypes);\nconst VIEW_PROPS = Object.keys(ViewPropTypes);\n\nexport default class Accordion extends Component {\n  static propTypes = {\n    sections: PropTypes.array.isRequired,\n    renderHeader: PropTypes.func.isRequired,\n    renderContent: PropTypes.func.isRequired,\n    renderFooter: PropTypes.func,\n    renderSectionTitle: PropTypes.func,\n    activeSections: PropTypes.arrayOf(PropTypes.number).isRequired,\n    onChange: PropTypes.func.isRequired,\n    align: PropTypes.oneOf(['top', 'center', 'bottom']),\n    duration: PropTypes.number,\n    easing: PropTypes.string,\n    underlayColor: PropTypes.string,\n    touchableComponent: PropTypes.elementType,\n    touchableProps: PropTypes.object,\n    disabled: PropTypes.bool,\n    expandFromBottom: PropTypes.bool,\n    expandMultiple: PropTypes.bool,\n    onAnimationEnd: PropTypes.func,\n    sectionContainerStyle: ViewPropTypes.style,\n    containerStyle: ViewPropTypes.style,\n  };\n\n  static defaultProps = {\n    underlayColor: 'black',\n    disabled: false,\n    expandFromBottom: false,\n    expandMultiple: false,\n    touchableComponent: TouchableHighlight,\n    renderSectionTitle: () => null,\n    onAnimationEnd: () => null,\n    sectionContainerStyle: {},\n  };\n\n  _toggleSection(section) {\n    if (!this.props.disabled) {\n      const { activeSections, expandMultiple, onChange } = this.props;\n\n      let updatedSections = [];\n\n      if (activeSections.includes(section)) {\n        updatedSections = activeSections.filter(a => a !== section);\n      } else if (expandMultiple) {\n        updatedSections = [...activeSections, section];\n      } else {\n        updatedSections = [section];\n      }\n\n      onChange && onChange(updatedSections);\n    }\n  }\n\n  render() {\n    let viewProps = {};\n    let collapsibleProps = {};\n\n    Object.keys(this.props).forEach(key => {\n      if (COLLAPSIBLE_PROPS.includes(key)) {\n        collapsibleProps[key] = this.props[key];\n      } else if (VIEW_PROPS.includes(key)) {\n        viewProps[key] = this.props[key];\n      }\n    });\n\n    const {\n      activeSections,\n      containerStyle,\n      sectionContainerStyle,\n      expandFromBottom,\n      sections,\n      underlayColor,\n      touchableProps,\n      touchableComponent: Touchable,\n      onAnimationEnd,\n      renderContent,\n      renderHeader,\n      renderFooter,\n      renderSectionTitle,\n    } = this.props;\n\n    const renderCollapsible = (section, key) => (\n      <Collapsible\n        collapsed={!activeSections.includes(key)}\n        {...collapsibleProps}\n        onAnimationEnd={() => onAnimationEnd(section, key)}\n      >\n        {renderContent(section, key, activeSections.includes(key), sections)}\n      </Collapsible>\n    );\n\n    return (\n      <View style={containerStyle} {...viewProps}>\n        {sections.map((section, key) => (\n          <View key={key} style={sectionContainerStyle}>\n            {renderSectionTitle(section, key, activeSections.includes(key))}\n\n            {expandFromBottom && renderCollapsible(section, key)}\n\n            <Touchable\n              onPress={() => this._toggleSection(key)}\n              underlayColor={underlayColor}\n              {...touchableProps}\n            >\n              {renderHeader(\n                section,\n                key,\n                activeSections.includes(key),\n                sections\n              )}\n            </Touchable>\n\n            {!expandFromBottom && renderCollapsible(section, key)}\n\n            {renderFooter &&\n              renderFooter(\n                section,\n                key,\n                activeSections.includes(key),\n                sections\n              )}\n          </View>\n        ))}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}